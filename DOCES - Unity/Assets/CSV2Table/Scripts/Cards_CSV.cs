// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class Cards_CSV : MonoBehaviour
{

	public TextAsset file;

	void Start()
	{
		Load(file);
		Debug.Log (Find_Nome_da_carta("Atributos").Nome_da_carta);
	}

	public class Row
	{
		public string Nome_da_carta;
		public string Tipo_da_Carta;
		public string Descrição;
		public string Tamanho_da_descrição;
		public string Lógica;
		public string Criatividade;
		public string Organização;
		public string Golpinhos;
		public string Efeito;

	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = Csv_Parser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.Nome_da_carta = grid[i][0];
			row.Tipo_da_Carta = grid[i][1];
			row.Descrição = grid[i][2];
			row.Tamanho_da_descrição = grid[i][3];
			row.Lógica = grid[i][4];
			row.Criatividade = grid[i][5];
			row.Organização = grid[i][6];
			row.Golpinhos = grid[i][7];
			row.Efeito = grid[i][8];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_Nome_da_carta(string find)
	{
		return rowList.Find(x => x.Nome_da_carta == find);
	}
	public List<Row> FindAll_Nome_da_carta(string find)
	{
		return rowList.FindAll(x => x.Nome_da_carta == find);
	}
	public Row Find_Tipo_da_Carta(string find)
	{
		return rowList.Find(x => x.Tipo_da_Carta == find);
	}
	public List<Row> FindAll_Tipo_da_Carta(string find)
	{
		return rowList.FindAll(x => x.Tipo_da_Carta == find);
	}
	public Row Find_Descrição(string find)
	{
		return rowList.Find(x => x.Descrição == find);
	}
	public List<Row> FindAll_Descrição(string find)
	{
		return rowList.FindAll(x => x.Descrição == find);
	}
	public Row Find_Tamanho_da_descrição(string find)
	{
		return rowList.Find(x => x.Tamanho_da_descrição == find);
	}
	public List<Row> FindAll_Tamanho_da_descrição(string find)
	{
		return rowList.FindAll(x => x.Tamanho_da_descrição == find);
	}
	public Row Find_Lógica(string find)
	{
		return rowList.Find(x => x.Lógica == find);
	}
	public List<Row> FindAll_Lógica(string find)
	{
		return rowList.FindAll(x => x.Lógica == find);
	}
	public Row Find_Criatividade(string find)
	{
		return rowList.Find(x => x.Criatividade == find);
	}
	public List<Row> FindAll_Criatividade(string find)
	{
		return rowList.FindAll(x => x.Criatividade == find);
	}
	public Row Find_Organização(string find)
	{
		return rowList.Find(x => x.Organização == find);
	}
	public List<Row> FindAll_Organização(string find)
	{
		return rowList.FindAll(x => x.Organização == find);
	}
	public Row Find_Golpinhos(string find)
	{
		return rowList.Find(x => x.Golpinhos == find);
	}
	public List<Row> FindAll_Golpinhos(string find)
	{
		return rowList.FindAll(x => x.Golpinhos == find);
	}
	public Row Find_Efeito(string find)
	{
		return rowList.Find(x => x.Efeito == find);
	}
	public List<Row> FindAll_Efeito(string find)
	{
		return rowList.FindAll(x => x.Efeito == find);
	}

}